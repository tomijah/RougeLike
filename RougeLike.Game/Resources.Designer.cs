//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RougeLike.Game {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RougeLike.Game.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330 core
        ///in vec4 vertexColor;
        ///in vec3 Normal;  
        ///in vec3 FragPos;  
        ///
        ///uniform vec3 lightPos;
        ///
        ///out vec4 color;
        ///
        ///void main()
        ///{
        ///	//vec3 lightPos = vec3(0.0f,5.0f,5.0f);
        ///	vec3 norm = normalize(Normal);
        ///	vec3 lightDir = normalize(lightPos - FragPos);  
        ///	float diff = max(dot(norm, lightDir), 0.0);
        ///    vec3 diffuse = diff * vec3(1.0, 1.0, 1.0);
        ///    color = vec4(diffuse, 1.0f) * vertexColor;
        ///} .
        /// </summary>
        internal static string BasicMeshFragment {
            get {
                return ResourceManager.GetString("BasicMeshFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330 core
        ///
        ///layout (location = 0) in vec3 position;
        ///layout (location = 1) in vec3 normal;
        ///uniform mat4 view;
        ///uniform mat4 projection;
        ///uniform mat4 model;
        ///
        ///out vec4 vertexColor;
        ///out vec3 Normal;
        ///out vec3 FragPos;  
        ///
        ///void main()
        ///{
        ///    gl_Position = projection * view * model * vec4(position, 1.0);
        ///    vertexColor = vec4(1.0f, 1.0f, 1.0f, 1.0f);
        ///	FragPos = vec3(model * vec4(position, 1.0f));
        ///	Normal = mat3(transpose(inverse(model))) * normal;
        ///}.
        /// </summary>
        internal static string BasicMeshVertex {
            get {
                return ResourceManager.GetString("BasicMeshVertex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330 core
        ///in vec4 vertexColor;
        ///in vec3 Normal;  
        ///in vec3 FragPos;  
        ///
        ///uniform vec3 lightPos;
        ///
        ///out vec4 color;
        ///
        ///void main()
        ///{
        ///    color = vec4(1,1,1,1);
        ///} .
        /// </summary>
        internal static string LightSourceFragment {
            get {
                return ResourceManager.GetString("LightSourceFragment", resourceCulture);
            }
        }
    }
}
